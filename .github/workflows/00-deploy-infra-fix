name: 00-Deploy infra fix

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1 # This value was modified by the initial-setup python script
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.4.6"

      - name: Terraform Init Backend
        run: terraform init
        working-directory: terraform/backend

      - name: Terraform Apply Backend
        run: terraform apply -auto-approve
        working-directory: terraform/backend

      - name: Move Terraform State to /terraform/aws/
        if: ${{ success() }}
        run: cp terraform/backend/terraform.tfstate terraform/aws

      - name: Terraform Init Actual Infrastructure
        if: ${{ always() }}
        run: terraform init -force-copy
        working-directory: terraform/aws

      - name: Import Existing Resources
        if: ${{ always() }}
        run: |
          terraform import aws_elasticache_subnet_group.elasticache-subnet-group elasticache-subnet-group
        working-directory: terraform/aws

      - name: Terraform Plan for ElastiCache Only
        run: terraform plan -target=aws_elasticache_replication_group.elasticache-replication-group-dev -target=aws_elasticache_replication_group.elasticache-replication-group-stage -target=aws_elasticache_replication_group.elasticache-replication-group-prod
        working-directory: terraform/aws

      - name: Terraform Apply for ElastiCache Only
        run: terraform apply -auto-approve -target=aws_elasticache_replication_group.elasticache-replication-group-dev -target=aws_elasticache_replication_group.elasticache-replication-group-stage -target=aws_elasticache_replication_group.elasticache-replication-group-prod
        working-directory: terraform/aws

      - name: Update Repo
        if: ${{ always() }}
        run: git pull

      - name: Save ElastiCache DBs Endpoints
        if: ${{ always() }}
        run: |
          echo "$(terraform -chdir=terraform/aws output -raw elasticache_dev_primary_endpoint_address)" > elasticache_dev_endpoint.txt
          echo "$(terraform -chdir=terraform/aws output -raw elasticache_stage_primary_endpoint_address)" > elasticache_stage_endpoint.txt
          echo "$(terraform -chdir=terraform/aws output -raw elasticache_prod_primary_endpoint_address)" > elasticache_prod_endpoint.txt

      - name: Modify Values for Each Environment
        if: ${{ always() }}
        run: |
          sed -i "s/redis_host:.*/redis_host: $(cat elasticache_dev_endpoint.txt | tr -d '\n')/g" helm/my-app/backend/environments/values-dev.yaml
          sed -i "s/redis_host:.*/redis_host: $(cat elasticache_stage_endpoint.txt | tr -d '\n')/g" helm/my-app/backend/environments/values-stage.yaml
          sed -i "s/redis_host:.*/redis_host: $(cat elasticache_prod_endpoint.txt | tr -d '\n')/g" helm/my-app/backend/environments/values-prod.yaml

      - name: Commit Changes to GitHub
        if: ${{ always() }}
        run: |
          git config --global user.email "GitHubActions@DeployInfraWorkflow.com"
          git config --global user.name "GitHub Actions - Deploy Infra Workflow"
          git add helm/my-app/backend/environments/
          git commit -m "ElastiCache endpoints updated in environment values.yaml files by GitHub Actions"
          git push

      - name: Save SSH Command
        if: ${{ always() }}
        run: |
          echo "Assuming you are on the root directory of the automate-all-the-things repo, run this:" > ssh-to-bastion.txt
          echo "chmod 400 terraform/aws/templates/private-key" >> ssh-to-bastion.txt
          echo "ssh -i terraform/aws/templates/private-key ubuntu@$(terraform -chdir=terraform/aws output -raw ssh_host)" >> ssh-to-bastion.txt
          cat ssh-to-bastion.txt

      - name: Upload SSH Command to Connect to Bastion
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ssh-to-bastion
          path: ssh-to-bastion.txt
